#7298
answer = set()
for l in range(89, 100):
    for one in range(1, l):
        two = l - 1 - one
        s = '0' + '1' * one + '2' * two
        sm = sum(map(int, s))
        while '01' in s or '02' in s:
            s = s.replace('01', '2120', 1)
            s = s.replace('02', '110', 1)
        summ = sum(map(int, s))
        if int(summ ** 0.5) ** 2 == summ:
            answer.add(sm)
print('7298', min(answer))
#7295
def prost(n):
    s = set()
    for i in range(1, int(n ** 0.5) + 1):
        if n % i == 0:
            s.add(i)
    return s


answer = set()
for l in range(87, 100):
    for one in range(1, l):
        two = l - 1 - one
        s = '0' + '1' * one + '2' * two
        sm = sum(map(int, s))
        while '01' in s or '02' in s:
            s = s.replace('01', '2120', 1)
            s = s.replace('02', '110', 1)
        summ = sum(map(int, s))
        if len(prost(int(summ))) == 1:
            answer.add(sm)
print('7295', min(answer))
#7310
answer = set()
for l in range(5, 50):
    for one in range(l - 2):
        for two in range(l - one - 2):
            three = l - 2 - one - two
            s = '0' + one * '1' + two * '2' + three * '3' + '0'
            while '00' not in s:
                s = s.replace('01', '320', 1)
                s = s.replace('02', '2013', 1)
                s = s.replace('03', '1210', 1)
            if s.count('1') == 36 and s.count('2') == 30:
                answer.add(l)
print('7310', max(answer))


#7307
'''
s = '00' + '1' * 36 + '2' * 30 + '00'
while '00' in s:
    s = s.replace('01', '320',1).replace('02','2013',1).replace('03','1210',1)
    print(s)'''
#7927
'''for n in range(3,10001):
    s = '1' + '2' * n
    while ('12' in s) or ('322' in s) or ('222' in s):
        s = s.replace('12','2',1 ).replace('322','21',1).replace('222','3',1)
    sm = sum(map(int, str(s)))
    if sm == 15:
        print(n)
        break'''
#7852
'''k = 0
for n in range(12345,14568):
    s = '1' * n
    while '111' in s:
        s = s.replace('111','2',1 ).replace('222','11',1).replace('1','2',1)
    if len(s) == 3:
        k +=1
print(k)'''
#7851
'''k = 0
for n in range(12345,13457):
    s = '1' * n
    while '111' in s:
        s = s.replace('111','2',1 ).replace('222','11',1).replace('1','2',1)
    if s.count('1') == 0:
        k +=1
print(k)'''
#7772
'''for n in range(2,10001):
    s = '59' + n *'8'
    while '68' in s or '988' in s or '888' in s :
        s = s.replace('68','8',1).replace('988','86',1).replace('888','9',1)
    sm = sum(map(int,s))
    if int(sm ** (1 / 3)) ** 3 == sm:
        print(n)
        break'''
#7768
'''k = 0
s = 200 * '*'
while '****' in s or '???' in s:
    if '****' in s:
        s = s.replace('****', '???',1)
        k += 3
    elif '???' in s:
        s = s.replace('??', '*', 1)
print(k)'''
#7554
'''
s = '9' * 81
while '33333' in s or '999' in s:
    s = s.replace('33333','99',1).replace('999','3',1)
print(s)'''
#7521
'''s = 83 * '8'
while '111' in s or '88888' in s:
    s = s.replace('111','88',1).replace('88888','8',1)
print(s)'''
#7470
'''s = '7' * 108
while '33333' in s or '777' in s:
    s = s.replace('33333','7',1).replace('777','3',1)
print(s)'''
#7305
A = []

for x in range(20, -1, -1):
    for y in range(20, -1, -1):
        for z in range(20, -1, -1):
            num = '0' + '1' * x + '2' * y + '3' * z + '0'
            while '00' not in num:
                num = num.replace('01', '220', 1)
                num = num.replace('02', '1013', 1)
                num = num.replace('03', '120', 1)
            if num.count('1') == 15 and num.count('2') == 21:
                A.append(x + y + z)

result = max(A) + 2
print('7305',result)
#7300
from math import *
answer = set()
for l in range(95, 150):
    for one in range(1, l):
        two = l - 1 - one
        s = '0' + '1' * one + '2' * two
        sm = sum(map(int, s))
        while '01' in s or '02' in s:
            s = s.replace('01', '2210', 1)
            s = s.replace('02', '1110', 1)
        summ = sum(map(int, s))
        if summ == 2 ** int(log2(summ)):
            answer.add(sm)
print('7300', min(answer))
